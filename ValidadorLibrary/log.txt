[VALIDADOR] Se realiza un borrado de usuarios en el authentication para asegurar el correcto funcionamiento
RESULTADO REMOVE: true
[VALIDADOR] Si el servicio web está configurado con scope por omisión o application puede dar resultados que no sean correctos con el tester
********************** TEST 1 **********************
El admin se logea, cambia la contraseña, log out y login con la nueva
Result admin login (exp true) : true
Result admin changePwd (exp true) : true
Result admin login (exp true) : true
Result admin changePwd AGAIN (exp true) : true
Result admin logout  (exp true) : true

SUCCESS
********************** TEST 2 **********************
El admin se logea, añade dos usuarios iguales, el segundo debe fallar, y luego logout
Result admin login (exp true) : true
Result add user (exp true) : true
Result add user (exp false because user already exist) : false

SUCCESS
********************** TEST 6 **********************
user2 login (falla), admin login, crea user2, user2 login otro st, remove user1 (falla), admin borra user1 (ok) borra user que no existe (falla)
Result user login (exp false becuase user not registered) : false
Result admin login (exp true) : true
Result add user2 (exp true) : true
Result user2 login (exp true) : true
Result user2 deletes user1 (exp false becuase not allowed) : false
Result admin deletes user1 (exp true) : true
Result admin deletes user500 (exp false bacause user500 didn't exist) : false

SUCCESS
********************** TEST 8 **********************
user2 login st1 y st2, st1 logout, changpwd en st1 (fail), changpwd en st2
Result user2 login con stub1 (exp true) : true
Result user2 login con stub2 (exp true) : true
Result user2 change pwd con stub1 (exp false because user2 has logout on stub1-session) : false
Result user2 change pwd con stub2 (exp true) : true

SUCCESS
********************** TEST 10 **********************
user2 login 2 veces en st1, logout, admin login st1 (ok), logout
Result user2 login (exp true) : true
Result user2 login (exp true) : true
Result user2 logout (exp true) : true
Result admin login en mismo stub (exp false) : true
Result user2 logout (exp true) : true

SUCCESS
********************** TEST 11 **********************
user2 login st1, admin login st2, admin borrar user2, st1 hacer login user2 (fail)
Result user2 login (exp true) : true
Result admin login (exp true) : true
Result admin deletes user2 (exp true): true
Result user2 login (exp fail) cause was removed : false

SUCCESS
********************** TEST 13 **********************
admin login, crea user4, en otro stub se añade libro sin logear (F), user4 login y añade libro en ese stub(F), admin añade libro en su stub(ok)
Result admin login (exp true) : true
Result admin create user4 (exp true) : true
Result addbook without login (exp fail) : false
Result user4 login (exp true) : true
Result addbook without privileges (exp fail) : false
Result admin addbook (exp true) : true

SUCCESS
********************** TEST 16 **********************
admin login y borrar un libro que no existe (F)
Result admin login (exp true) : true
Result admin removeBook didn't exist (exp fail) : false

SUCCESS
********************** TEST 19 **********************
sin logear gestbooks from author (F), admin login en otro stub y busca libros de un autor que no está (OK)
Result getBooksAuthos without login (expect false) : false
Result admin login (exp true) : true
Result admin getBooksAuthos (expect true) : true

SUCCESS
********************** TEST 20 **********************
admin login en dos stubs, en uno añade libros y en otro va consultando lista de libros, ok y primer libro el último añadido
Result admin login (exp true) : true
Result admin login other stub (exp true) : true
Result admin addbook (exp true) : true
Result admin booklist (exp: true): true
First Book should be issn 3 (exp: true): true
Result admin addbook (exp true) : true
Result admin booklist (exp: true): true
First Book should be issn 4 (exp: true): true

SUCCESS
********************** TEST 23 (value: 1)**********************
admin login, añade u6, u6 login en st2, toma libro (ok), devuelve dos veces el libro (ok la 1a y F la 2a)
Result admin login (exp true) : true
Result admin create user6 (exp true) : true
Result user6 login (exp true) : true
Result user6 borrowBook (exp true) : true
Result user6 returnBook (exp true) : true
Result user6 returnBook again (exp false) : false

SUCCESS
********************** TEST 24 **********************
admin login, añade libro, añade user7, u7 login en dos stubs, en uno toma libro (ok) y en otro consulta lista de libros (ok), debe mostrar el último
Result admin login (exp true) : true
Result admin addbook (exp true) : true
Result admin create user7 (exp true) : true
Result user7 login (exp true) : true
Result user7 login (exp true) other stub: true
Result user7 borrowBook (exp true) : true
Result user7 in other stub, print list of borrowed (exp: true and book is correct)true// true

SUCCESS
********************** TEST 26 **********************
admin añade u9, admin añade 2 ejemplares, u9 login en otro stub, u9 toma prestado libro (ok), otra vez (F)
Result admin login (exp true) : true
Result admin create user9 (exp true) : true
Result admin addbook (exp true) : true
Result admin addbook (exp true) : true
Result user9 login (exp true) : true
Result user9 borrowBook (exp true) : true
Result user7 borrowBook again (exp false) : false

SUCCESS
***********************************RESULT******************************
Subtotal pruebas superadas: 13.0
